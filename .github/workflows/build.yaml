name: Build/release

on:
  push:
    branches:
      - '*'
      - 'feature/*'
    tags:
      - v*
  pull_request:
    branches:
      - main
      
# env:
#   DEBUG: '*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18

      - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
        if: runner.os == 'Windows'
      - run: vcpkg install openssl:x64-windows-static-md
        if: runner.os == 'Windows'

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-cargo-

      # Setup package dependencies
      - name: Install npm dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Run cargo tests
        run: npm run test
      
      - name: Run NodeJS Tests
        run: npm run nodetest

      - name: Package the asset
        run: npx @mapbox/node-pre-gyp package

      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: xal-node
          path: |
            **.tar.gz

      - name: Upload to Github releases
        shell: bash
        run: gh release upload ${{ env.RELEASE_VERSION }} "$(find ./build -name *.tar.gz)" --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/v')