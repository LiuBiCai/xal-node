name: Build/release

on:
  push:
    branches:
      - '*'
    tags:
      - v*
  pull_request:
    branches:
      - main
      
# env:
#   DEBUG: '*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest, macOS-arm64]

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18

      # - name: Setup OpenSSL
      #   uses: crazy-max/ghaction-chocolatey@v2
      #   with:
      #     args: install openssl
      #   if: runner.os == 'Windows'

      # - uses: sfackler/actions/rustup@master
      #   if: runner.os == 'Windows'
      # - run: echo "::set-output name=version::$(rustc --version)"
      #   id: rust-version
      - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
        if: runner.os == 'Windows'
      - run: vcpkg install openssl:x64-windows-static-md
        if: runner.os == 'Windows'

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-cargo-

      # Setup package dependencies
      - name: Install npm dependencies
        run: npm ci